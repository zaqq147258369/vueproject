基本语法：
    箭头函数：
         cosnt ccc = (参数) => { }
        参数：
         放入一个参数： const ccc = num => {}
         放入多个参数： const ccc = (n1,n2) => {}

        this的使用：
            箭头函数的使用
            1、箭头函数中的this应用的是最近作用域中的this，从当前位置向外层作用域中查找this。
            function(){} 这种方法this指向window。

前端路由：
        路由是通过互联网把信息从源地址传输到目的地址的活动
        前端渲染
    SPA页面：单页面富应用，整个网页只有一个html页面，如此为了可以渲染页面内容，需要从单文件中截取部分内容。这就用到了前端路由
    前端路由也生成url，但是不请求后台，只是请求前端浏览器单页面中抽取部分内容。
    这些url是由前端管理，前端管理的一套映射关系。如此当改变url，页面不请求服务器资源，不刷新页面。

vue-router：是vue.js官方路由插件
将路由与组件映射。
1、创建组件。
2、与组件映射
3、使用路由：通过<router-link>和<router-view>

<router-link>被渲染成a标签
<router-view>渲染组件

router-link 属性：
    tag=“button”，可以指定将其渲染成什么组件，如button可以将其渲染成button标签。
    replace ，使用之后不会留下history记录，所以后退键不能使用。
    active-class

动态路由：
    某些情况下路由是不确定的，
    在router的js中配置路由，path实现动态 path：‘/xxx/:xxx’,
    组件中给属性赋值，:to="'/ddd/'+userId".
获取路由的部分信息：
    $router:代表全局的router对象。
    $route：代表当前活跃的路由。

路由的懒加载：
    当打包只有一个js时，会影响页面加载。
    如果把不同路由对应的组件分割成不同代码块，然后当路由被访问的时候才加载对应组件，可以更高效。

嵌套路由:

路由参数传递：
  传递参数主要两种类型：params和query
  params的类型：
     配置路由的格式：/router/:id
     传递的方式：在path后跟上对应的值
     传递后形成的路径：/router/123,/router/abc
  query的类型：
    配置路由格式：/router,普通配置
    传递的方式：对象使用query的key作为传递方式
    传递后的路径：/router?id=123,/router?id=abc





